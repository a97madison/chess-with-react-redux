import {Coordinate} from "Coordinate";
import {Move} from "Move";
import {Piece} from "Piece";

/**
 * A history snapshot
 */
export public interface ~Snapshot {
    public squares: Array<Array<Piece>>;
    public lastMoves: Array<Move>;

    public whiteKingMoved: boolean;
    public leftWhiteRookMoved: boolean;
    public rightWhiteRookMoved: boolean;

    public blackKingMoved: boolean;
    public leftBlackRookMoved: boolean;
    public rightBlackRookMoved: boolean;
}

/**
 * Global Redux state
 */
export public class ~StoreState {
 	public history: Array<Snapshot>;
    public stepNumber: int;
    public whiteIsNext: boolean;
    public pickedSquare: Coordinate;
    public possibleMoves: Array<Coordinate>;
}

 const initialSquares: Array<Array<Piece>> = [
	[Piece.WHITE_ROOK, Piece.WHITE_KNIGHT, Piece.WHITE_BISHOP,Piece.WHITE_QUEEN,Piece.WHITE_KING,Piece.WHITE_BISHOP,Piece.WHITE_KNIGHT,Piece.WHITE_ROOK],
	[Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN, Piece.WHITE_PAWN],
    [null, null,null,null,null,null,null,null],
	[null, null,null,null,null,null,null,null],
	[null, null,null,null,null,null,null,null],
	[null, null,null,null,null,null,null,null],
    [Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN, Piece.BLACK_PAWN],
    [Piece.BLACK_ROOK, Piece.BLACK_KNIGHT, Piece.BLACK_BISHOP,Piece.BLACK_QUEEN,Piece.BLACK_KING,Piece.BLACK_BISHOP,Piece.BLACK_KNIGHT,Piece.BLACK_ROOK]
];

    // Initial state
export public const initialState: StoreState = {
	history: [{
		squares: initialSquares,
		lastMoves: new Array<Move>(),
		whiteKingMoved: false,
		leftWhiteRookMoved: false,
		rightWhiteRookMoved: false,
		blackKingMoved: false,
		leftBlackRookMoved: false,
		rightBlackRookMoved: false,
	}],
    stepNumber: 0,
	whiteIsNext: true,
	pickedSquare: null,
	possibleMoves: new Array<Coordinate>()
};
