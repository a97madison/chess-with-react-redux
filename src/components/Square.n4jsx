import {Piece} from "Piece";
import * as React from "react";

/**
 * Square props
 */
export public interface ~SquareProps extends React.ComponentProps {
	public isWhite: boolean;
    public piece: Piece;
    public onClick: {function(): void};
    public isPicked: boolean;
    public isPossibleMove: boolean;
    public isPlayWithHelp: boolean;
}

/**
 * Board square styles
 */
const boardSquareStyles = {
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
  width: '100%',
  height: '100%',
  fontSize: '3.8vw',
	fontFamily: 'Arial Unicode MS'
}

/**
 * Square React component. needs to be a class
 */
export public class Square extends React.Component<SquareProps, Object> {

		@Override
		public render(): React.Element<?> {
			let light: string = '#EADAB9';
			let dark: string = '#C2A482';
			let fadedLight = 'rgba(234, 218, 185, 0.2)';
			let fadedDark = 'rgba(194, 164, 130, 0.2)';
			let possibleMove = 'rgba(0, 128, 0, 0.95)';
			let possibleCapture = 'rgba(255, 255, 0, 0.9)'; // CAN U MOVE HERE??

			let backgroundColour: string = this.props.isWhite? light : dark;
			// Special square highlighting a picked square or possible move?
			if (this.props.isPicked) {
				backgroundColour = this.props.isWhite? fadedLight : fadedDark;
			} else if (this.props.isPossibleMove && this.props.isPlayWithHelp) {
				if (this.props.piece) {
					backgroundColour = possibleMove;
				} else {
					backgroundColour = possibleCapture;
				}
			}

			return (
				<div style={Object.assign({}, boardSquareStyles, {backgroundColor: backgroundColour})}
						onClick={this.props.onClick}>
								{this.props.piece}
				</div>
			);
		}
}
