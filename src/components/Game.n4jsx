import {connect} from "@n4jsd/react-redux";
import {ConnectedChessGame} from "components/ChessGame"
import {ConnectedTopPart} from "components/TOPPART"
import * as React from "react";
import {StoreState} from "store/StoreState";
// import { Button } from 'reactstrap';

 /* Game props */
  export public interface ~GameProps extends React.ComponentProps {
    public isPlayWithHelp: boolean; // redux
      public isHistory: boolean; // redux
      // cpu level information
  }

  /* Game state */
  interface ~GameState {
    public isPaused: boolean;
      public isHistoryShowing: boolean;
      // full game information for saving.
  }

  /* Game React component (root... root will actually be Home) */
  export default public class Game extends React.Component<GameProps, GameState> {

    public constructor(gameProps: GameProps) {
        super(gameProps);
        // initial state
        this.state = {
          isPaused: false,
          isHistoryShowing: false
        };
    }

    /* handlePauseClick */
    private handlePauseClick() {
        this.setState({
          isPaused: true
        });
        // stop whichever timer is running
        // popup in the center of the screen
    }

    /* handleQuitClick */
    private handleQuitClick(save: boolean) {
      if (save) {
        // SAVE ENTIRE GAME WITH NAMES INTO REDUX STORE
      }
      // RETURN TO HOME SCREEN OF APP
    }

    /* handleContinueClick */
    private handleContinueClick() {
        this.setState({
          isPaused: false
        });
        // start whichever timer is running
        // close popup in the center of the screen
    }

    /* handleHistoryClick */
    private handleHistoryClick() {
      this.setState({
        isHistoryShowing: !this.state.isHistoryShowing
      });
    }

    @Override
    public render(): React.Element<?> {

      return (
          <div /*style={gameStyles}*/>
              // TOP PART
              <ConnectedTopPart />
              // CONNECTED CHESS GAME
              <ConnectedChessGame />
              // <Button onClick={() => { this.startGame(); }}>{"START GAME"}</Button>
              // <Button onClick={() => { this.navToSettings(); }}>{"SETTINGS"}</Button>
          </div>
      );
    }
  }

  /* Map Redux state to Game's props */
  function mapStateToProps(state: StoreState): GameProps {
  	return {
      isPlayWithHelp: state.isPlayWithHelp,
      isHistory: state.isHistory
   	}
  }

export public const ConnectedGame = connect(mapStateToProps)(Game);
